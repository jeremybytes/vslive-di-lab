//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.MyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPeople", ReplyAction="http://tempuri.org/IPersonService/GetPeopleResponse")]
        System.Collections.Generic.List<Common.Person> GetPeople();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/GetPeople", ReplyAction="http://tempuri.org/IPersonService/GetPeopleResponse")]
        System.IAsyncResult BeginGetPeople(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<Common.Person> EndGetPeople(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPerson", ReplyAction="http://tempuri.org/IPersonService/GetPersonResponse")]
        Common.Person GetPerson(string lastName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/GetPerson", ReplyAction="http://tempuri.org/IPersonService/GetPersonResponse")]
        System.IAsyncResult BeginGetPerson(string lastName, System.AsyncCallback callback, object asyncState);
        
        Common.Person EndGetPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/AddPerson", ReplyAction="http://tempuri.org/IPersonService/AddPersonResponse")]
        void AddPerson(Common.Person newPerson);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/AddPerson", ReplyAction="http://tempuri.org/IPersonService/AddPersonResponse")]
        System.IAsyncResult BeginAddPerson(Common.Person newPerson, System.AsyncCallback callback, object asyncState);
        
        void EndAddPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonService/UpdatePersonResponse")]
        void UpdatePerson(string lastName, Common.Person updatedPerson);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonService/UpdatePersonResponse")]
        System.IAsyncResult BeginUpdatePerson(string lastName, Common.Person updatedPerson, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/DeletePerson", ReplyAction="http://tempuri.org/IPersonService/DeletePersonResponse")]
        void DeletePerson(string lastName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/DeletePerson", ReplyAction="http://tempuri.org/IPersonService/DeletePersonResponse")]
        System.IAsyncResult BeginDeletePerson(string lastName, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/UpdatePeople", ReplyAction="http://tempuri.org/IPersonService/UpdatePeopleResponse")]
        void UpdatePeople(System.Collections.Generic.List<Common.Person> updatedPeople);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPersonService/UpdatePeople", ReplyAction="http://tempuri.org/IPersonService/UpdatePeopleResponse")]
        System.IAsyncResult BeginUpdatePeople(System.Collections.Generic.List<Common.Person> updatedPeople, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePeople(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : Services.MyService.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPeopleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPeopleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<Common.Person> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<Common.Person>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Common.Person Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Common.Person)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<Services.MyService.IPersonService>, Services.MyService.IPersonService {
        
        private BeginOperationDelegate onBeginGetPeopleDelegate;
        
        private EndOperationDelegate onEndGetPeopleDelegate;
        
        private System.Threading.SendOrPostCallback onGetPeopleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonDelegate;
        
        private EndOperationDelegate onEndGetPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPersonDelegate;
        
        private EndOperationDelegate onEndAddPersonDelegate;
        
        private System.Threading.SendOrPostCallback onAddPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePersonDelegate;
        
        private EndOperationDelegate onEndUpdatePersonDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePersonDelegate;
        
        private EndOperationDelegate onEndDeletePersonDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePeopleDelegate;
        
        private EndOperationDelegate onEndUpdatePeopleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePeopleCompletedDelegate;
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPeopleCompletedEventArgs> GetPeopleCompleted;
        
        public event System.EventHandler<GetPersonCompletedEventArgs> GetPersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePersonCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePeopleCompleted;
        
        public System.Collections.Generic.List<Common.Person> GetPeople() {
            return base.Channel.GetPeople();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPeople(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPeople(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<Common.Person> EndGetPeople(System.IAsyncResult result) {
            return base.Channel.EndGetPeople(result);
        }
        
        private System.IAsyncResult OnBeginGetPeople(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPeople(callback, asyncState);
        }
        
        private object[] OnEndGetPeople(System.IAsyncResult result) {
            System.Collections.Generic.List<Common.Person> retVal = this.EndGetPeople(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPeopleCompleted(object state) {
            if ((this.GetPeopleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPeopleCompleted(this, new GetPeopleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPeopleAsync() {
            this.GetPeopleAsync(null);
        }
        
        public void GetPeopleAsync(object userState) {
            if ((this.onBeginGetPeopleDelegate == null)) {
                this.onBeginGetPeopleDelegate = new BeginOperationDelegate(this.OnBeginGetPeople);
            }
            if ((this.onEndGetPeopleDelegate == null)) {
                this.onEndGetPeopleDelegate = new EndOperationDelegate(this.OnEndGetPeople);
            }
            if ((this.onGetPeopleCompletedDelegate == null)) {
                this.onGetPeopleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPeopleCompleted);
            }
            base.InvokeAsync(this.onBeginGetPeopleDelegate, null, this.onEndGetPeopleDelegate, this.onGetPeopleCompletedDelegate, userState);
        }
        
        public Common.Person GetPerson(string lastName) {
            return base.Channel.GetPerson(lastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPerson(string lastName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerson(lastName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Common.Person EndGetPerson(System.IAsyncResult result) {
            return base.Channel.EndGetPerson(result);
        }
        
        private System.IAsyncResult OnBeginGetPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lastName = ((string)(inValues[0]));
            return this.BeginGetPerson(lastName, callback, asyncState);
        }
        
        private object[] OnEndGetPerson(System.IAsyncResult result) {
            Common.Person retVal = this.EndGetPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonCompleted(object state) {
            if ((this.GetPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonCompleted(this, new GetPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonAsync(string lastName) {
            this.GetPersonAsync(lastName, null);
        }
        
        public void GetPersonAsync(string lastName, object userState) {
            if ((this.onBeginGetPersonDelegate == null)) {
                this.onBeginGetPersonDelegate = new BeginOperationDelegate(this.OnBeginGetPerson);
            }
            if ((this.onEndGetPersonDelegate == null)) {
                this.onEndGetPersonDelegate = new EndOperationDelegate(this.OnEndGetPerson);
            }
            if ((this.onGetPersonCompletedDelegate == null)) {
                this.onGetPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonDelegate, new object[] {
                        lastName}, this.onEndGetPersonDelegate, this.onGetPersonCompletedDelegate, userState);
        }
        
        public void AddPerson(Common.Person newPerson) {
            base.Channel.AddPerson(newPerson);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddPerson(Common.Person newPerson, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPerson(newPerson, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddPerson(System.IAsyncResult result) {
            base.Channel.EndAddPerson(result);
        }
        
        private System.IAsyncResult OnBeginAddPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Common.Person newPerson = ((Common.Person)(inValues[0]));
            return this.BeginAddPerson(newPerson, callback, asyncState);
        }
        
        private object[] OnEndAddPerson(System.IAsyncResult result) {
            this.EndAddPerson(result);
            return null;
        }
        
        private void OnAddPersonCompleted(object state) {
            if ((this.AddPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPersonAsync(Common.Person newPerson) {
            this.AddPersonAsync(newPerson, null);
        }
        
        public void AddPersonAsync(Common.Person newPerson, object userState) {
            if ((this.onBeginAddPersonDelegate == null)) {
                this.onBeginAddPersonDelegate = new BeginOperationDelegate(this.OnBeginAddPerson);
            }
            if ((this.onEndAddPersonDelegate == null)) {
                this.onEndAddPersonDelegate = new EndOperationDelegate(this.OnEndAddPerson);
            }
            if ((this.onAddPersonCompletedDelegate == null)) {
                this.onAddPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPersonCompleted);
            }
            base.InvokeAsync(this.onBeginAddPersonDelegate, new object[] {
                        newPerson}, this.onEndAddPersonDelegate, this.onAddPersonCompletedDelegate, userState);
        }
        
        public void UpdatePerson(string lastName, Common.Person updatedPerson) {
            base.Channel.UpdatePerson(lastName, updatedPerson);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePerson(string lastName, Common.Person updatedPerson, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePerson(lastName, updatedPerson, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePerson(System.IAsyncResult result) {
            base.Channel.EndUpdatePerson(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lastName = ((string)(inValues[0]));
            Common.Person updatedPerson = ((Common.Person)(inValues[1]));
            return this.BeginUpdatePerson(lastName, updatedPerson, callback, asyncState);
        }
        
        private object[] OnEndUpdatePerson(System.IAsyncResult result) {
            this.EndUpdatePerson(result);
            return null;
        }
        
        private void OnUpdatePersonCompleted(object state) {
            if ((this.UpdatePersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePersonAsync(string lastName, Common.Person updatedPerson) {
            this.UpdatePersonAsync(lastName, updatedPerson, null);
        }
        
        public void UpdatePersonAsync(string lastName, Common.Person updatedPerson, object userState) {
            if ((this.onBeginUpdatePersonDelegate == null)) {
                this.onBeginUpdatePersonDelegate = new BeginOperationDelegate(this.OnBeginUpdatePerson);
            }
            if ((this.onEndUpdatePersonDelegate == null)) {
                this.onEndUpdatePersonDelegate = new EndOperationDelegate(this.OnEndUpdatePerson);
            }
            if ((this.onUpdatePersonCompletedDelegate == null)) {
                this.onUpdatePersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePersonCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePersonDelegate, new object[] {
                        lastName,
                        updatedPerson}, this.onEndUpdatePersonDelegate, this.onUpdatePersonCompletedDelegate, userState);
        }
        
        public void DeletePerson(string lastName) {
            base.Channel.DeletePerson(lastName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeletePerson(string lastName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePerson(lastName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeletePerson(System.IAsyncResult result) {
            base.Channel.EndDeletePerson(result);
        }
        
        private System.IAsyncResult OnBeginDeletePerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lastName = ((string)(inValues[0]));
            return this.BeginDeletePerson(lastName, callback, asyncState);
        }
        
        private object[] OnEndDeletePerson(System.IAsyncResult result) {
            this.EndDeletePerson(result);
            return null;
        }
        
        private void OnDeletePersonCompleted(object state) {
            if ((this.DeletePersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePersonAsync(string lastName) {
            this.DeletePersonAsync(lastName, null);
        }
        
        public void DeletePersonAsync(string lastName, object userState) {
            if ((this.onBeginDeletePersonDelegate == null)) {
                this.onBeginDeletePersonDelegate = new BeginOperationDelegate(this.OnBeginDeletePerson);
            }
            if ((this.onEndDeletePersonDelegate == null)) {
                this.onEndDeletePersonDelegate = new EndOperationDelegate(this.OnEndDeletePerson);
            }
            if ((this.onDeletePersonCompletedDelegate == null)) {
                this.onDeletePersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePersonCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePersonDelegate, new object[] {
                        lastName}, this.onEndDeletePersonDelegate, this.onDeletePersonCompletedDelegate, userState);
        }
        
        public void UpdatePeople(System.Collections.Generic.List<Common.Person> updatedPeople) {
            base.Channel.UpdatePeople(updatedPeople);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePeople(System.Collections.Generic.List<Common.Person> updatedPeople, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePeople(updatedPeople, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdatePeople(System.IAsyncResult result) {
            base.Channel.EndUpdatePeople(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePeople(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.Generic.List<Common.Person> updatedPeople = ((System.Collections.Generic.List<Common.Person>)(inValues[0]));
            return this.BeginUpdatePeople(updatedPeople, callback, asyncState);
        }
        
        private object[] OnEndUpdatePeople(System.IAsyncResult result) {
            this.EndUpdatePeople(result);
            return null;
        }
        
        private void OnUpdatePeopleCompleted(object state) {
            if ((this.UpdatePeopleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePeopleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePeopleAsync(System.Collections.Generic.List<Common.Person> updatedPeople) {
            this.UpdatePeopleAsync(updatedPeople, null);
        }
        
        public void UpdatePeopleAsync(System.Collections.Generic.List<Common.Person> updatedPeople, object userState) {
            if ((this.onBeginUpdatePeopleDelegate == null)) {
                this.onBeginUpdatePeopleDelegate = new BeginOperationDelegate(this.OnBeginUpdatePeople);
            }
            if ((this.onEndUpdatePeopleDelegate == null)) {
                this.onEndUpdatePeopleDelegate = new EndOperationDelegate(this.OnEndUpdatePeople);
            }
            if ((this.onUpdatePeopleCompletedDelegate == null)) {
                this.onUpdatePeopleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePeopleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePeopleDelegate, new object[] {
                        updatedPeople}, this.onEndUpdatePeopleDelegate, this.onUpdatePeopleCompletedDelegate, userState);
        }
    }
}
